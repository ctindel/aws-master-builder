swagger: '2.0'
info:
  description: 'This is an example product/order inventory API '
  version: 1.0.0
  title: ctindel MB3
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: ctindel@amazon.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: store.ctindel-aws.com
basePath: /v1
tags:
  - name: product
    description: Operations on products
  - name: review
    description: Operations on reviews
  - name: order
    description: Access to orders
schemes:
  - https
  - http
paths:
  '/order/{orderId}':
    get:
      tags:
        - order
      description: >-
        Returns a single order
      operationId: findOrderById
      parameters:
        - name: orderId
          in: path
          description: ID of order
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: Order Response
          schema:
            $ref: '#/definitions/Order'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ApiResponse'
  /newOrder:
    post:
      tags:
        - order
      summary: Add a new order
      description: ''
      operationId: addOrder
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: New Order Request
          required: true
          schema:
            $ref: '#/definitions/NewOrder'
      responses:
        '201': {
            description: 'Successfully added',
            schema: {
              $ref: '#/definitions/Order'
            }
          }
        '405':
          description: Invalid input
  '/product/{productId}':
    get:
      tags:
        - product
      description: >-
        Returns information for a single product
      operationId: findProductById
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: productId
          in: path
          description: ID of product
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: Product Response
          schema:
            $ref: '#/definitions/Product'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ApiResponse'
  '/product/{productId}/review':
    post:
      tags:
        - product
      description: >-
        Adds a review to a product
      operationId: addProductReviewById
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: productId
          in: path
          description: ID of product
          required: true
          type: string
          format: uuid
        - name: reviewText
          in: body
          description: Text of Review
          required: true
          schema:
            $ref: '#/definitions/NewProductReview'
      responses:
        '201':
          description: Product Response
          schema:
            $ref: '#/definitions/ApiResponse'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ApiResponse'
  '/product/{productId}/reviews':
    get:
      tags:
        - product
      description: >-
        Gets all reviews for a product (paginated)
      operationId: getProductReviewsById
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path 
          name: productId
          description: ID of product
          required: true
          type: string
          format: uuid
        - in: query
          name: lastEvaluatedKeyId
          description: Last Evaluated Key from prior paginated call
          required: false
          type: string
      responses:
        '200':
          description: Product Review Array Response
          schema:
            type: object
            properties:
              lastEvaluatedKeyId:
                type: string
                example: "5c6df401d9ecd94a8bf8f1cc"
              reviews:
                type: array
                items:
                  $ref: '#/definitions/ProductReview'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ApiResponse'
  '/search/product':
    get:
      tags:
        - product
      description: >-
        Search all products
      operationId: searchProducts
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: searchText
          in: query
          description: Search text for all products
          required: true
          type: string
      responses:
        '200':
          description: Product Response
          schema:
            type: object
            properties:
              products:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/Product'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ApiResponse'
  '/review/{reviewId}':
    get:
      tags:
        - review
      description: >-
        Returns a single review for a single product
      operationId: findProductReviewById
      parameters:
        - name: productId
          in: path
          description: ID of product
          required: true
          type: string
          format: uuid
        - name: reviewId
          in: path
          description: ID of review
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: Product Review Response
          schema:
            $ref: '#/definitions/ProductReview'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ApiResponse'
  '/review/{reviewId}/like':
    post:
      tags:
        - review
      description: >-
        Add a like to a product review
      operationId: likeProductReviewById
      parameters:
        - name: productId
          in: path
          description: ID of product
          required: true
          type: string
          format: uuid
        - name: reviewId
          in: path
          description: ID of review
          required: true
          type: string
          format: uuid
      responses:
        '201':
          description: Product Review Add Like Response
          schema:
            $ref: '#/definitions/ApiResponse'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ApiResponse'
  '/review/{reviewId}/dislike':
    post:
      tags:
        - review
      description: >-
        Add a dislike to a product review
      operationId: dislikeProductReviewById
      parameters:
        - name: productId
          in: path
          description: ID of product
          required: true
          type: string
          format: uuid
        - name: reviewId
          in: path
          description: ID of review
          required: true
          type: string
          format: uuid
      responses:
        '201':
          description: Product Review Add Dislike Response
          schema:
            $ref: '#/definitions/ApiResponse'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ApiResponse'
  '/search/review':
    get:
      tags:
        - review
      description: >-
        Search product reviews for a single product
      operationId: searchProductReviews
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: productId
          in: query
          description: Product ID to search reviews of
          required: true
          type: string
        - name: searchText
          in: query
          description: Search review text
          required: true
          type: string
      responses:
        '200':
          description: Product Response
          schema:
            type: object
            properties:
              reviews:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/ProductReview'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ApiResponse'
definitions:
  Order:
    type: object
    allOf:
      - $ref: '#/definitions/NewOrder'
    required:
      - id
      - orderDate
      - products
    properties:
      id:
        type: string
        format: uuid
      orderDate:
        type: string
        format: date-time
      status:
        type: string
        description: Order Status
        enum:
          - placed
          - approved
          - delivered
  NewOrder:
    type: object
    required:
      - customerName
      - products
    properties:
      customerName:
        type: string
        example: Joe Cool
      customerAddress:
        type: string
        example: 7 W. 34th Street, New York  NY 10001
      products:
        type: array
        items:
          type: object
          properties:
            productId:
              type: string
              format: uuid
            count:
              type: integer
              example: 3
  Product:
    type: object
    properties:
      id:
        type: string
        format: uuid
      description:
        type: string
      numReviews:
        type: number
  ProductReview:
    type: object
    allOf:
      - $ref: '#/definitions/NewProductReview'
    properties:
      id:
        type: string
        format: uuid
      numLikes:
        type: integer
      numDislikes:
        type: integer
  NewProductReview:
    type: object
    required:
      - productId
      - reviewText
      - numStars
    properties:
      productId:
        type: string
        format: uuid
      reviewText:
        type: string
        example: This product really whips the llama's ass!
      numStars:
        type: integer
        minimum: 1
        maximum: 5
        example: 3
  LastEvaluatedKey:
    type: object
    properties:
      id:
        type: object
        properties:
          S:
            type: string
    example:
      id:
        S:
          5c6df401d9ecd94a8bf8f1cc
  ApiResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
      type:
        type: string
      message:
        type: string
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
